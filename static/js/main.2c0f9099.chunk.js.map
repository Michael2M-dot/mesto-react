{"version":3,"sources":["images/mesto_logo.svg","components/Header.js","utils/Api.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","components/PopupWithForm.js","components/Input.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","mix","className","cx","href","target","src","mestoLogo","alt","api","serverUrl","headers","this","_serverUrl","_headers","res","ok","json","Promise","reject","status","statusText","fetch","then","_checkStatus","data","method","body","JSON","stringify","name","userNameInput","about","userJobInput","_id","avatar","placeNameInput","link","placeLinkInput","id","avatarLinkInput","authorization","Card","props","onClick","onCardClick","arial-lable","tittle","type","likes","length","Main","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","getUserData","userData","catch","err","console","log","getInitialCards","initialCards","style","backgroundImage","onEditAvatar","onEditProfile","onAddPlace","map","card","date","Date","Footer","getFullYear","ImagePopup","placeName","placeLink","isOpen","onClose","PopupWithForm","title","autoComplete","noValidate","children","button","Input","htmlFor","placeholder","required","maxLength","minLength","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","selectedCardData","setSelectedCardData","closeAllPopup","handleEscClose","evt","key","document","addEventListener","removeEventListener","onKeyDown","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2c0f9099.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mesto_logo.6331fea1.svg\";","import mestoLogo from \"../images/mesto_logo.svg\";\nimport cx from 'classnames';\nimport React from \"react\";\n\nfunction Header({mix}) {\n  return (\n    <header className={cx(mix, 'header')}>\n      <a href=\"#\" className=\"logo\" target=\"_self\">\n        <img src={mestoLogo} alt=\"Логотип MESTO\" className=\"header__logo\" />\n      </a>\n    </header>\n  );\n}\n\nexport default Header;\n","// Токен: 99295e52-decf-4a30-8030-f17c65fb60b0\n// Идентификатор группы: cohort-24\n\nclass Api {\n  constructor({ serverUrl, headers }) {\n    this._serverUrl = serverUrl;\n    this._headers = headers;\n  }\n\n  _checkStatus(res) {\n    return res.ok\n      ? res.json()\n      : Promise.reject(`${res.status} ${res.statusText}`);\n  }\n\n  getUserData() {\n    return fetch(`${this._serverUrl}/users/me`, {\n      headers: this._headers,\n    }).then((res) => this._checkStatus(res));\n  }\n\n  getInitialCards() {\n    return fetch(`${this._serverUrl}/cards`, {\n      headers: this._headers,\n    }).then((res) => this._checkStatus(res));\n  }\n\n  updateUserData(data) {\n    return fetch(`${this._serverUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.userNameInput,\n        about: data.userJobInput,\n        _id: data._id,\n        avatar: data.avatar,\n      }),\n    }).then((res) => this._checkStatus(res));\n  }\n\n  addCard(data) {\n    return fetch(`${this._serverUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.placeNameInput,\n        link: data.placeLinkInput,\n        // owner: data.owner,\n        // user: data.user\n      }),\n    }).then((res) => this._checkStatus(res));\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._serverUrl}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then((res) => this._checkStatus(res));\n  }\n\n  likeCard(method, id) {\n    return fetch(`${this._serverUrl}/cards/likes/${id}`, {\n      method: method,\n      headers: this._headers,\n    }).then((res) => this._checkStatus(res));\n  }\n\n  updateAvatar(data) {\n    return fetch(`${this._serverUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatarLinkInput,\n      }),\n    }).then((res) => this._checkStatus(res));\n  }\n}\n\nconst api = new Api({\n  serverUrl: \"https://mesto.nomoreparties.co/v1/cohort-24\",\n  headers: {\n    authorization: \"99295e52-decf-4a30-8030-f17c65fb60b0\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;\n","import React from \"react\";\n\nconst Card = (props) => {\n  const handleClick = () => {\n    props.onCardClick(props);\n  };\n\n  return (\n    <li key={props.id} className=\"element elements__list-item\">\n      <img\n        src={props.link}\n        alt={props.name}\n        className=\"element__image\"\n        onClick={handleClick}\n      />\n      <div className=\"element__heading\">\n        <h2 className=\"element__title\">{props.name}</h2>\n        <div className=\"element__like-and-count\">\n          <button\n            arial-lable=\"Поставить/снять лайк на карточке\"\n            tittle=\"Поставить/снять лайк\"\n            type=\"button\"\n            className=\"element__like\"\n          />\n          <p className=\"element__count\">{props.likes.length}</p>\n        </div>\n      </div>\n      <button\n        arial-lable=\"Удалить карточку со страницы\"\n        tittle=\"Удалить\"\n        type=\"button\"\n        className=\"button element__trash element__trash_hidden\"\n        id=\"delete-Btn\"\n      />\n    </li>\n  );\n};\n\nexport default Card;\n","import React, { useState, useEffect } from \"react\";\nimport api from \"../utils/Api\";\nimport Card from \"./Card\";\n\nconst Main = (props) => {\n  const [userName, setUserName] = useState(\n    \"Не зарегистрированный пользователь\"\n  );\n  const [userDescription, setUserDescription] = useState(\n    \"Не зарегистрированный пользователь\"\n  );\n  const [userAvatar, setUserAvatar] = useState(\"\");\n  const [cards, setCards] = useState([]);\n\n  useEffect(() => {\n    api\n      .getUserData()\n      .then((userData) => {\n        setUserName(userData.name);\n        setUserDescription(userData.about);\n        setUserAvatar(userData.avatar);\n      })\n      .catch((err) =>\n        console.log(\n          `Непредвиденная ошибка при загрузке данных пользователя: ${err.status} ${err.statusText}`\n        )\n      );\n  }, [setUserDescription, setUserAvatar, setUserName]);\n\n  useEffect(() => {\n    api\n      .getInitialCards()\n      .then((initialCards) => {\n        setCards(initialCards);\n      })\n      .catch((err) =>\n        console.log(\n          `Непредвиденная ошибка при загрузке карточек: ${err.status} ${err.statusText}`\n        )\n      );\n  }, [setCards]);\n\n  return (\n    <main className=\"content page__content section section_size_narrow\">\n      <section className=\"profile\">\n        <div className=\"profile__user\">\n          <div\n            className=\"profile__user-avatar\"\n            style={{ backgroundImage: `url(${userAvatar})` }}\n            onClick={props.onEditAvatar}\n          />\n          <div className=\"profile__user-info profile__user-info_margins_top-bottom profile__user-info_margins_left-right\">\n            <h1 className=\"profile__user-name\">{userName}</h1>\n            <p className=\"profile__user-job\">{userDescription}</p>\n          </div>\n          <button\n            arial-lable=\"Открыть форму для изменения данных о пользователе\"\n            tittle=\"Открыть\"\n            type=\"button\"\n            className=\"button profile__button-edit\"\n            id=\"profile-editBtn\"\n            onClick={props.onEditProfile}\n          />\n        </div>\n        <button\n          arial-lable=\"Открыть форму для добавления фотографий на страницу\"\n          tittle=\"Добавить\"\n          type=\"button\"\n          className=\"button profile__button-add\"\n          onClick={props.onAddPlace}\n        />\n      </section>\n      <section className=\"elements\">\n        <ul className=\"elements__list\">\n          {cards.map((card) => {\n            return (\n              <Card key={card._id} {...card} onCardClick={props.onCardClick} />\n            );\n          })}\n        </ul>\n      </section>\n    </main>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport cx from 'classnames';\n\nconst date = new Date();\n\nfunction Footer({mix}) {\n  return (\n    <footer className={cx(mix, 'footer')}>\n      <p className=\"footer__copyright\">&copy; {date.getFullYear()} Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n\nconst ImagePopup = (props) => {\n  const placeName = props.data.name;\n  const placeLink = props.data.link;\n\n  return (\n    <section\n      className={`popup page__popup section ${\n        props.isOpen ? \"page__popup_visible\" : \"\"\n      }`}\n      id=\"picture-popup\"\n      onClick={props.onClose}\n    >\n      <div className=\"popup__window popup__window_size_l\">\n        <button\n          arial-lable=\"Закрыть окно просмотра фотографии\"\n          tittle=\"Закрыть\"\n          type=\"button\"\n          className=\"button popup__button-close popup__button-close_pos_inside\"\n          id=\"close-PicturePopup\"\n          onClick={props.onClose}\n        />\n        <figure className=\"popup__figure\">\n          <img\n            className=\"popup__image\"\n            src={placeLink}\n            alt={`Нам очень жаль что вы не можете увидеть изображение этого красивого места ${placeName}`}\n          />\n          <figcaption className=\"popup__caption\">{placeName}</figcaption>\n        </figure>\n      </div>\n    </section>\n  );\n};\n\nexport default ImagePopup;\n","import React from \"react\";\n\nfunction PopupWithForm(props) {\n  return (\n    <section\n      className={`popup page__popup section ${\n        props.isOpen ? \"page__popup_visible\" : \"\"\n      }`}\n      id={`edit-${props.name}`}\n      onClick={props.onClose}\n    >\n      <div className=\"popup__window popup__window_size_s\">\n        <h2 className=\"popup__title\">{props.title}</h2>\n        <button\n          arial-lable=\"Закрыть форму для изменения данных о пользователе\"\n          tittle=\"Закрыть\"\n          type=\"button\"\n          className=\"button popup__button-close\"\n          id=\"close-userPopup\"\n        />\n        <form\n          className=\"form\"\n          id={`${props.name}`}\n          name=\"userProfileForm\"\n          autoComplete=\"off\"\n          noValidate\n        >\n          {props.children}\n          <button\n            arial-lable=\"Сохранить изменения данных о пользователе\"\n            type=\"submit\"\n            className=\"button form__submit-btn\"\n            id=\"user-submit\"\n          >\n            <div className=\"button__wrapper\">\n              <div className=\"button__text\">{props.button}</div>\n              <div className=\"button__jumping-dots button__jumping-dots_visibility_hidden\">\n                <span className=\"button__jumping-dots jump\">.</span>\n                <span className=\"button__jumping-dots jump\">.</span>\n                <span className=\"button__jumping-dots jump\">.</span>\n              </div>\n            </div>\n          </button>\n        </form>\n      </div>\n    </section>\n  );\n}\n\nexport default PopupWithForm;\n","import React from \"react\";\n\nconst Input = (props) => {\n  return (\n    <label className=\"form__fieldset\" htmlFor={`${props.id}-input`}>\n      <input\n        type={props.type}\n        className=\"form__input\"\n        id={`${props.id}-input`}\n        name={props.name}\n        placeholder={props.placeholder}\n        required={props.required}\n        maxLength={props.maxLength}\n        minLength={props.minLength}\n      />\n      <span className=\"form__input-error\" id={`${props.id}-input-error`} />\n    </label>\n  );\n};\n\nexport default Input;\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header.js\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport ImagePopup from \"./ImagePopup\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport Input from \"./Input\";\n\nconst App = () => {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(false);\n  const [selectedCardData, setSelectedCardData] = useState({}); //стэйт создан для хранения данных о карточке, без него после закрытия на мгновенье появляется окно с alt\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n\n  const handleCardClick = (value) => {\n    setSelectedCard(true);\n    setSelectedCardData(value);\n  };\n\n  const closeAllPopup = () => {\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(false);\n  };\n\n  const handleEscClose = (evt) => {\n    if (evt.key === \"Escape\") {\n      closeAllPopup();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleEscClose, false);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleEscClose, false);\n    };\n  }, []);\n\n  return (\n    <div className=\"page\" onKeyDown={handleEscClose}>\n      <div className=\"page__container\">\n        <Header mix={\"page__header section\"}/>\n        <Main\n          onEditProfile={handleEditProfileClick}\n          onEditAvatar={handleEditAvatarClick}\n          onAddPlace={handleAddPlaceClick}\n          onCardClick={handleCardClick}\n        />\n        <Footer mix={\"page__footer\"}/>\n      </div>\n\n      <PopupWithForm\n        name={\"user-profile\"}\n        title={\"Редактировать профиль\"}\n        button={\"Сохранить\"}\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopup}\n      >\n        <Input\n          type={\"text\"}\n          id={\"user-name\"}\n          placeholder={\"Имя\"}\n          name={\"userNameInput\"}\n          required={true}\n          maxLength={\"40\"}\n          minLength={\"2\"}\n        />\n        <Input\n          type={\"text\"}\n          id={\"user-job\"}\n          placeholder={\"О себе\"}\n          name={\"userJobInput\"}\n          required={true}\n          maxLength={\"200\"}\n          minLength={\"2\"}\n        />\n      </PopupWithForm>\n\n      <PopupWithForm\n        name={\"user-avatar\"}\n        title={\"Обновить аватар\"}\n        button={\"Сохранить\"}\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopup}\n      >\n        <Input\n          type={\"url\"}\n          id={\"avatar-link\"}\n          placeholder={\"Ссылка на изображение (обязательно)\"}\n          name={\"avatarLinkInput\"}\n          required={true}\n          maxLength={\"\"}\n          minLength={\"\"}\n        />\n      </PopupWithForm>\n\n      <PopupWithForm\n        name={\"user-card\"}\n        title={\"Новое место\"}\n        button={\"Создать\"}\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopup}\n      >\n        <Input\n          type={\"text\"}\n          id={\"place-name\"}\n          placeholder={\"Название (обязательно)\"}\n          name={\"placeNameInput\"}\n          required={true}\n          maxLength={\"30\"}\n          minLength={\"2\"}\n        />\n        <Input\n          type={\"url\"}\n          id={\"place-link\"}\n          placeholder={\"Ссылка на картинку (обязательно)\"}\n          name={\"placeLinkInput\"}\n          required={true}\n          maxLength={\"\"}\n          minLength={\"\"}\n        />\n      </PopupWithForm>\n\n      <ImagePopup\n        isOpen={selectedCard}\n        data={selectedCardData}\n        onClose={closeAllPopup}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}